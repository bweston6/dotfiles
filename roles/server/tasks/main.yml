---
- include_tasks: 'arch.yml'
  when: ansible_facts['os_family'] == 'Archlinux'

- include_tasks: 'debian.yml'
  when: ansible_facts['os_family'] == 'Debian'

- name: 'checking for stock mkinitcpio'
  ansible.builtin.lineinfile:
    name: '/etc/mkinitcpio.conf'
    line: 'HOOKS=(systemd autodetect modconf block filesystems fsck)'
    state: 'present'
  check_mode: true
  register: 'mkinitcpio'

- name: 'installing server dotfiles for root'
  ansible.builtin.copy:
    src: '{{ item }}'
    dest: '/'
    directory_mode: 0755
    mode: 0644
    group: '0'
    owner: '0'
  loop:
    - 'root/certbot/'
    - 'root/fail2ban/'
    - 'root/mkinitcpio/'
    - 'root/zfs/'
  become: true

- name: 'building boot image with mkinitcpio'
  ansible.builtin.command:
    cmd: 'mkinitcpio -P'
  become: true
  when: 'mkinitcpio.changed'

- name: 'configuring boot parameters'
  ansible.builtin.replace:
    path: '/boot/loader/entries/arch.conf'
    regexp: '{{ item.regexp }}'
    replace: '{{ item.replace }}'
  loop:
    - regexp: '^(linux.*\n)(.*initramfs.*)$'
      replace: '\g<1>initrd\t/intel-ucode.img\n\g<2>'
    - regexp: '^(options\sroot=\".*\" rw)$'
      replace: '\g<1> i915.enable_guc=2'
  become: true

- name: 'enabling server services'
  ansible.builtin.service:
    enabled: true
    name: '{{ item }}'
  loop:
    - 'NetworkManager'
  become: true
