---
- name: 'test internet and DNS on 8.8.8.8'
  ansible.builtin.command:
    cmd: 'ping -q -c 1 -W 1 google.com'
  changed_when: false

- include_tasks: 'arch.yml'
  when: ansible_facts['os_family'] == 'Archlinux'

- include_tasks: 'debian.yml'
  when: ansible_facts['os_family'] == 'Debian'

- name: 'setting shell to zsh'
  ansible.builtin.user:
    name: '{{ item }}'
    shell: '/usr/bin/zsh'
  loop:
    - '{{ ansible_env.USER }}'
    - 'root'
  become: true

- name: 'installing ohmyzsh for user'
  ansible.builtin.shell:
    cmd: 'RUNZSH=no sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"'
    creates: '~/.oh-my-zsh'

- name: 'installing ohmyzsh for root'
  ansible.builtin.shell:
    cmd: 'RUNZSH=no sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"'
    creates: '/root/.oh-my-zsh'
  become: true

- name: 'installing common dotfiles for user'
  ansible.builtin.copy:
    backup: true
    src: '{{ item }}'
    dest: '~/'
    directory_mode: 0755
    mode: 0644
    group: 1000
    owner: 1000
  loop:
    - 'user/git/'
    - 'user/vim/'
    - 'user/zsh/'

- name: 'copying ssh keys'
  ansible.builtin.copy:
    backup: true
    src: 'user/keys/'
    dest: '~/'
    directory_mode: 0755
    mode: 0400
    group: 1000
    owner: 1000

- name: 'check if ssh key is on keyring'
  ansible.builtin.command:
    cmd: 'ssh-add -l'
  changed_when: false
  register: 'keys'

- name: 'adding ssh key to keyring'
  ansible.builtin.shell:
    cmd: |
      eval $(ssh-agent)
      ssh-add ~/.ssh/id_ed25519
  when: '"b.weston60@gmail.com" in keys'

- name: 'installing common dotfiles for root'
  ansible.builtin.copy:
    backup: true
    src: '{{ item }}'
    dest: '/'
    directory_mode: 0755
    mode: 0644
    group: 0
    owner: 0
  loop:
    - 'root/zsh/'
  become: true

- name: 'installing/updating vim-plug plugins'
  ansible.builtin.command:
    cmd: 'vim +PlugInstall +PlugUpdate +PlugClean! +PlugUpgrade +qall'
  changed_when: '"already up-to-date" not in vim_plug.stdout'
  register: 'vim_plug'
